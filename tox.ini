[tox]
envlist =
  py3
  bandit
  black
  flake8
  isort
skipsdist = True

[cleanup]
commands =
  # find {toxinidir}/tests -type f -name "*.pyc" -delete
  # find {toxinidir}/tests -type d -name "__pycache__" -delete
  # find {toxinidir}/src -type f -name "*.pyc" -delete
  # find {toxinidir}/src -type d -name "__pycache__" -delete
  # find {toxinidir}/src -type f -path "*.egg-info*" -delete
  # find {toxinidir}/src -type d -path "*.egg-info" -delete

[pipupgrade]
commands =
  python -m pip install --upgrade pip

[testenv:black]
changedir = {toxinidir}
depends = isort
deps = black
commands =
  {[pipupgrade]commands}
  black --line-length 79 --exclude=migrations {toxinidir}/sebastian
  {[cleanup]commands}

[testenv:flake8]
changedir = {toxinidir}
depends = black
deps = flake8
commands =
  {[pipupgrade]commands}
  flake8 {toxinidir}/sebastian
  {[cleanup]commands}

[testenv:isort]
changedir = {toxinidir}
deps = isort
commands =
  {[pipupgrade]commands}
  isort {toxinidir}/sebastian
  {[cleanup]commands}

[testenv:mypy]
changedir = {toxinidir}
deps = mypy
       django-stubs
       types-requests
commands =
  {[pipupgrade]commands}
  mypy {toxinidir}/sebastian
  {[cleanup]commands}

[testenv]
whitelist_externals =
  find
  rm
setenv =
    PYTHONWARNINGS=once::DeprecationWarning
    GOOGLE_CLOUD_PROJECT=dummy-project
commands =
  {[pipupgrade]commands}
  pip install -r requirements.txt
  python manage.py test
  {[cleanup]commands}
deps =
  coverage

[testenv:bandit]
deps =
    bandit==1.7.1
commands =
    bandit -c bandit.yaml -r sebastian
